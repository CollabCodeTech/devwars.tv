@mixin size($width, $height: $width) {
    height: $height;
    width: $width;
}

@mixin aspect-ratio($width, $height) {
    position: relative;
    &:before {
        display: block;
        content: '';
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }
    > .aspect {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 0;
    }
}

@mixin clear-position {
    position: relative;
    top: auto;
    right: auto;
    left: auto;
    bottom: auto;
    transform: none;
}

@mixin clear-aspect-ratio {
    &:before {
        display: none;
    }
}

@mixin material($depth: 1) {
    @if $depth == 1 {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
    } @else if $depth == 2 {
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
    } @else if $depth == 3 {
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19);
    } @else if $depth == 4 {
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25);
    } @else if $depth == 5 {
        box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3);
    }
}

@mixin linear-gradient($direction, $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: linear-gradient($direction, $color-stops);
}

@mixin spacing($prop, $property, $dir, $direction) {
    .#{$prop}#{$dir} {
        &-0 {
            #{$property}-#{$direction}: 0 !important;
        }
        &-xs {
            #{$property}-#{$direction}: $xs-space !important;
        }
        &-15 {
            #{$property}-#{$direction}: $grid-gutter-width !important;
        }
        &-sm {
            #{$property}-#{$direction}: $s-space !important;
        }
        &-30 {
            #{$property}-#{$direction}: 30px !important;
        }
        &-md {
            #{$property}-#{$direction}: $m-space !important;
        }
        &-60 {
            #{$property}-#{$direction}: 60px !important;
        }
        &-lg {
            #{$property}-#{$direction}: $l-space !important;
        }
        &-xl {
            #{$property}-#{$direction}: $xl-space !important;
        }
    }
}

/* ==========================================================================
XX. Unaccessible Scoped Functions
========================================================================== */
@mixin breakpoint($breakpoint, $range: max) {
    @media (#{$range}-width: map-get($grid-breakpoints, $breakpoint)) {
        @content;
    }
}

@mixin col-breakpoint($point) {
    @if $point == lg {
        @media (min-width: map-get($grid-breakpoints, md)) {
            @content;
        }
    }
    @if $point == md {
        @media (min-width: map-get($grid-breakpoints, sm)) {
            @content;
        }
    }
    @if $point == sm {
        @media (min-width: map-get($grid-breakpoints, xs)) {
            @content;
        }
    }
    @if $point == xs {
        @media (min-width: 0px) {
            @content;
        }
    }
}
